{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","todoInfoClasses","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","todosDefault","getMaxId","prevTodos","Math","max","App","useState","setTitle","setTodos","setUserId","userError","setUserError","titleError","setTitleError","action","method","onSubmit","event","preventDefault","trim","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb01ed4c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../types/Todo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n  const todoInfoClasses = classNames(\n    'TodoInfo',\n    {\n      'TodoInfo--completed': completed,\n    },\n  );\n\n  return (\n    <article className={todoInfoClasses} data-id={id}>\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './components/types/Todo';\nimport { User } from './components/types/User';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todosDefault: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const getMaxId = (prevTodos: Todo[]) => {\n  return Math.max(...prevTodos.map(({ id }) => id)) + 1;\n};\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [todos, setTodos] = useState(todosDefault);\n  const [userId, setUserId] = useState(0);\n  const [userError, setUserError] = useState(false);\n  const [titleError, setTitleError] = useState(false);\n\n  const addTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (title.trim() && userId) {\n      setTodos((prevTodos: Todo[]) => (\n        [...prevTodos, {\n          id: getMaxId(prevTodos),\n          title,\n          completed: false,\n          userId,\n          user: getUser(userId),\n        }]\n      ));\n      setTitle('');\n      setUserId(0);\n    }\n\n    if (!title.trim()) {\n      setTitleError(true);\n    }\n\n    if (!userId) {\n      setUserError(true);\n    }\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addTodo}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            {' '}\n            <input\n              name=\"title\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleChangeTitle}\n            />\n          </label>\n          {titleError && (\n            <span\n              className=\"error\"\n            >\n              Please enter a title\n            </span>\n          )}\n\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            {' '}\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleChangeUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>))}\n\n            </select>\n          </label>\n\n          {userError && (\n            <span\n              className=\"error\"\n            >\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}